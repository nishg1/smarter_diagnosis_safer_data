C:\Users\meteh\anaconda3\Lib\site-packages\google\protobuf\internal\well_known_types.py:174: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  self.FromDatetime(datetime.datetime.utcnow())
[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8080
 * Running on http://192.168.1.13:8080
[33mPress CTRL+C to quit[0m
[93mWARNING [0m:   DEPRECATED FEATURE: flwr.server.start_server() is deprecated.
	Instead, use the `flower-superlink` CLI command to start a SuperLink as shown below:

		$ flower-superlink --insecure

	To view usage and all available options, run:

		$ flower-superlink --help

	Using `start_server()` is deprecated.

            This is a deprecated feature. It will be removed
            entirely in future versions of Flower.

[92mINFO [0m:      Starting Flower server, config: num_rounds=5, no round_timeout
[92mINFO [0m:      Flower ECE: gRPC server running (5 rounds), SSL is disabled
[92mINFO [0m:      [INIT]
[92mINFO [0m:      Requesting initial parameters from one random client
Traceback (most recent call last):
  File "C:\Users\meteh\OneDrive\Desktop\federated_learning_hospital_data\federated_server.py", line 116, in <module>
    start_server()
  File "C:\Users\meteh\OneDrive\Desktop\federated_learning_hospital_data\federated_server.py", line 106, in start_server
    fl.server.start_server(
  File "C:\Users\meteh\anaconda3\Lib\site-packages\flwr\server\app.py", line 255, in start_server
    hist = run_fl(
           ^^^^^^^
  File "C:\Users\meteh\anaconda3\Lib\site-packages\flwr\server\server.py", line 492, in run_fl
    hist, elapsed_time = server.fit(
                         ^^^^^^^^^^^
  File "C:\Users\meteh\anaconda3\Lib\site-packages\flwr\server\server.py", line 93, in fit
    self.parameters = self._get_initial_parameters(server_round=0, timeout=timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\meteh\anaconda3\Lib\site-packages\flwr\server\server.py", line 284, in _get_initial_parameters
    get_parameters_res = random_client.get_parameters(
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\meteh\anaconda3\Lib\site-packages\flwr\server\superlink\fleet\grpc_bidi\grpc_client_proxy.py", line 73, in get_parameters
    res_wrapper: ResWrapper = self.bridge.request(
                              ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\meteh\anaconda3\Lib\site-packages\flwr\server\superlink\fleet\grpc_bidi\grpc_bridge.py", line 147, in request
    self._raise_if_closed()
  File "C:\Users\meteh\anaconda3\Lib\site-packages\flwr\server\superlink\fleet\grpc_bidi\grpc_bridge.py", line 82, in _raise_if_closed
    raise GrpcBridgeClosed()
flwr.server.superlink.fleet.grpc_bidi.grpc_bridge.GrpcBridgeClosed
